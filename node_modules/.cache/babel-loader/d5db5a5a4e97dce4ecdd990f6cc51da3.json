{"ast":null,"code":"import _slicedToArray from \"/home/ekiprop/repo_code/frontend/socapi/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ekiprop/repo_code/frontend/socapi/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { SplitButton, MenuItem } from \"react-bootstrap\";\n\nconst CountryList = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        socapi = _useState2[0],\n        setSocapi = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        load = _useState4[0],\n        setLoad = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        error = _useState6[0],\n        setError = _useState6[1];\n\n  useEffect(() => {\n    axios.get(\"http://localhost:8000/socapi/\").then(res => {\n      console.log(res.data);\n      setSocapi(res.data.results);\n      setLoad(true);\n    }).catch(err => {\n      setError(err.message);\n      setLoad(true);\n    });\n  }, []);\n\n  if (load) {\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, error ? React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, error.message) : socapi.map((soc, index) => React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, soc.home_team, \",\", soc.country)));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n};\n\nexport default CountryList;","map":{"version":3,"sources":["/home/ekiprop/repo_code/frontend/socapi/src/App.js"],"names":["React","useEffect","useState","axios","SplitButton","MenuItem","CountryList","socapi","setSocapi","load","setLoad","error","setError","get","then","res","console","log","data","results","catch","err","message","map","soc","index","home_team","country"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,sCAAP;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,iBAAtC;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA,oBACIJ,QAAQ,CAAC,EAAD,CADZ;AAAA;AAAA,QACjBK,MADiB;AAAA,QACTC,SADS;;AAAA,qBAEAN,QAAQ,CAAC,KAAD,CAFR;AAAA;AAAA,QAEjBO,IAFiB;AAAA,QAEXC,OAFW;;AAAA,qBAGER,QAAQ,CAAC,EAAD,CAHV;AAAA;AAAA,QAGjBS,KAHiB;AAAA,QAGVC,QAHU;;AAKxBX,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACFU,GADH,CACO,+BADP,EAEGC,IAFH,CAEQC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAV,MAAAA,SAAS,CAACO,GAAG,CAACG,IAAJ,CAASC,OAAV,CAAT;AACAT,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KANH,EAOGU,KAPH,CAOSC,GAAG,IAAI;AACZT,MAAAA,QAAQ,CAACS,GAAG,CAACC,OAAL,CAAR;AACAZ,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KAVH;AAWD,GAZQ,EAYN,EAZM,CAAT;;AAcA,MAAID,IAAJ,EAAU;AACR,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,KAAK,GACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAK,CAACW,OAAX,CADI,GAGJf,MAAM,CAACgB,GAAP,CAAW,CAACC,GAAD,EAAMC,KAAN,KACT;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,GAAG,CAACE,SADP,OACmBF,GAAG,CAACG,OADvB,CADF,CAJJ,CADF;AAaD,GAdD,MAcO;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;AACF,CApCD;;AAsCA,eAAerB,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { SplitButton, MenuItem } from \"react-bootstrap\";\n\nconst CountryList = () => {\n  const [socapi, setSocapi] = useState([]);\n  const [load, setLoad] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8000/socapi/\")\n      .then(res => {\n        console.log(res.data);\n        setSocapi(res.data.results);\n        setLoad(true);\n      })\n      .catch(err => {\n        setError(err.message);\n        setLoad(true);\n      });\n  }, []);\n\n  if (load) {\n    return (\n      <ul>\n        {error ? (\n          <li>{error.message}</li>\n        ) : (\n          socapi.map((soc, index) => (\n            <li key={index}>\n              {soc.home_team},{soc.country}\n            </li>\n          ))\n        )}\n      </ul>\n    );\n  } else {\n    return <div>Loading...</div>;\n  }\n};\n\nexport default CountryList;\n"]},"metadata":{},"sourceType":"module"}